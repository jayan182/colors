[{"/home/jayan/React/colors/src/index.js":"1","/home/jayan/React/colors/src/reportWebVitals.js":"2","/home/jayan/React/colors/src/App.jsx":"3","/home/jayan/React/colors/src/Providers/userProvider.js":"4","/home/jayan/React/colors/src/Lib/products.js":"5","/home/jayan/React/colors/src/Components/Contacts.jsx":"6","/home/jayan/React/colors/src/Components/Memo.jsx":"7","/home/jayan/React/colors/src/Components/About.jsx":"8","/home/jayan/React/colors/src/Components/Home.jsx":"9","/home/jayan/React/colors/src/Components/Contact/list.jsx":"10","/home/jayan/React/colors/src/Components/Contact/detail.jsx":"11","/home/jayan/React/colors/src/Components/Contact/create.jsx":"12","/home/jayan/React/colors/src/Components/Movie/index.jsx":"13","/home/jayan/React/colors/src/Components/Movie/detail.jsx":"14","/home/jayan/React/colors/src/Lib/cards.js":"15","/home/jayan/React/colors/src/Lib/sort.js":"16","/home/jayan/React/colors/src/Components/Task.jsx":"17","/home/jayan/React/colors/src/Components/Todo.jsx":"18","/home/jayan/React/colors/src/Common/Wrapper/index.js":"19","/home/jayan/React/colors/src/Hooks/useFetch.js":"20","/home/jayan/React/colors/src/Common/Nav/index.jsx":"21","/home/jayan/React/colors/src/Common/Card/movieCard.jsx":"22","/home/jayan/React/colors/src/Lib/menu.js":"23","/home/jayan/React/colors/src/Common/BreadCrumb/index.js":"24","/home/jayan/React/colors/src/Common/Footer/index.jsx":"25","/home/jayan/React/colors/src/Common/Card/index.jsx":"26","/home/jayan/React/colors/src/Lib/genres.js":"27","/home/jayan/React/colors/src/Common/Pill/index.jsx":"28"},{"size":532,"mtime":1679933219970,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1679933219970,"results":"31","hashOfConfig":"30"},{"size":1200,"mtime":1679937109907,"results":"32","hashOfConfig":"30"},{"size":103,"mtime":1679933219970,"results":"33","hashOfConfig":"30"},{"size":1462,"mtime":1679933219970,"results":"34","hashOfConfig":"30"},{"size":313,"mtime":1679933219970,"results":"35","hashOfConfig":"30"},{"size":916,"mtime":1679933219970,"results":"36","hashOfConfig":"30"},{"size":1007,"mtime":1679933219970,"results":"37","hashOfConfig":"30"},{"size":2464,"mtime":1679933219970,"results":"38","hashOfConfig":"30"},{"size":2544,"mtime":1679933219970,"results":"39","hashOfConfig":"30"},{"size":1403,"mtime":1679933219970,"results":"40","hashOfConfig":"30"},{"size":2637,"mtime":1679933219970,"results":"41","hashOfConfig":"30"},{"size":3775,"mtime":1680178857552,"results":"42","hashOfConfig":"30"},{"size":4040,"mtime":1680004108122,"results":"43","hashOfConfig":"30"},{"size":1854,"mtime":1679933219970,"results":"44","hashOfConfig":"30"},{"size":128,"mtime":1679933219970,"results":"45","hashOfConfig":"30"},{"size":485,"mtime":1679933219970,"results":"46","hashOfConfig":"30"},{"size":437,"mtime":1679933219970,"results":"47","hashOfConfig":"30"},{"size":438,"mtime":1679933219970,"results":"48","hashOfConfig":"30"},{"size":391,"mtime":1679933219970,"results":"49","hashOfConfig":"30"},{"size":2004,"mtime":1679933219970,"results":"50","hashOfConfig":"30"},{"size":936,"mtime":1680003971605,"results":"51","hashOfConfig":"30"},{"size":1252,"mtime":1679933219970,"results":"52","hashOfConfig":"30"},{"size":834,"mtime":1679933219970,"results":"53","hashOfConfig":"30"},{"size":693,"mtime":1679933219970,"results":"54","hashOfConfig":"30"},{"size":196,"mtime":1679933219970,"results":"55","hashOfConfig":"30"},{"size":572,"mtime":1680089600218,"results":"56","hashOfConfig":"30"},{"size":259,"mtime":1680176227790,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sersj5",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jayan/React/colors/src/index.js",[],[],"/home/jayan/React/colors/src/reportWebVitals.js",[],[],"/home/jayan/React/colors/src/App.jsx",[],[],"/home/jayan/React/colors/src/Providers/userProvider.js",[],[],"/home/jayan/React/colors/src/Lib/products.js",[],[],"/home/jayan/React/colors/src/Components/Contacts.jsx",["145"],[],"/home/jayan/React/colors/src/Components/Memo.jsx",["146"],[],"/home/jayan/React/colors/src/Components/About.jsx",["147","148"],[],"/home/jayan/React/colors/src/Components/Home.jsx",["149","150"],[],"/home/jayan/React/colors/src/Components/Contact/list.jsx",[],[],"/home/jayan/React/colors/src/Components/Contact/detail.jsx",["151","152","153","154","155"],[],"/home/jayan/React/colors/src/Components/Contact/create.jsx",["156","157","158"],[],"/home/jayan/React/colors/src/Components/Movie/index.jsx",["159","160"],[],"import Wrapper from '../../Common/Wrapper/index';\nimport MovieCard from '../../Common/Card/movieCard';\nimport {useNavigate } from \"react-router-dom\";\nimport genres from '../../Lib/genres';\nimport Pill from \"../../Common/Pill\";\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction Index(){\n    const [selectedGenre, setSelectedGenre] = useState('Horror');\n    const [data, setData] = useState([]);\n    let url = `https://yts.torrentbay.to/api/v2/list_movies.json?genre=${selectedGenre}`;\n    const navigate = useNavigate();\n    \n    const getMovieData = (url) => {\n        axios.get(url).then((res)=>{\n            setData(res.data);\n        });\n    }\n    useEffect(()=>{\n        getMovieData(url);\n    },[]);\n\n    const cardClick = (imdb_code) => {\n        navigate(`${imdb_code}`);\n    };\n\n    const changeGenre = async (genre) => {\n        setData(undefined);\n        setSelectedGenre(genre);\n        let url = `https://yts.torrentbay.to/api/v2/list_movies.json?limit=10&genre=${genre}&page=2`;\n        getMovieData(url);\n    } \n\n    const changePage = (page) => {\n        setData(undefined);\n        let url = `https://yts.torrentbay.to/api/v2/list_movies.json?limit=10&page=${page}`;\n        getMovieData(url);\n    }\n\n    return (\n        <div style={{alignItems:'center', justifyContent: 'space-around', display: 'flex', flexDirection: 'column'}}>\n            <h2>{`List of ${selectedGenre} movies`}</h2>\n\n            <div style={styles.container}>\n            {\n                genres.map((genre, key)=>{\n                   return (\n                    <Pill \n                        onPress={changeGenre}\n                        genre={genre} \n                        key={key} \n                        style={{\n                            display: 'flex',\n                            borderRadius: 10,\n                            backgroundColor: `${genre.colorCode}`,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width :100,\n                            margin: 10,\n                            cursor: 'pointer',\n                        }}\n                    />\n                   )\n                })\n            }\n            </div >\n\n            <div style={styles.container}>\n               {\n                   [1,2,3,4,5,6,7,8,9,10].map((number,key)=>{\n                       return (\n                           <button \n                            key={key}\n                            onClick={()=>{changePage(number)}}\n                           >{number}</button>\n                       )\n                   })\n               }\n            </div>\n\n            {\n                data !== undefined ?\n                <div style={{\n                    display: 'flex',\n                    flex:1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexWrap: 'wrap',\n                }}>\n                    {          \n                        Object.values(data).length > 0 ?\n                            data.data.movies.map((movie, key)=>{\n                                return (\n                                    <MovieCard movie={movie} index={key} cardClick={cardClick} />\n                                )\n                            })\n                        :\n                            <p>Loading ...</p>\n                    }\n                </div>\n                :\n                    <p>Loading ...</p>\n            }\n        </div>\n    )\n}\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flex:1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    }\n}\n\nexport default Index;","/home/jayan/React/colors/src/Components/Movie/detail.jsx",["161","162","163"],[],"import {useParams} from 'react-router-dom';\nimport {useState} from 'react';\nimport {useFetch} from '../../Hooks/useFetch';\n\nfunction MovieDetail(){\n    const params = useParams();\n    let imdb_id = params.movieId;\n\n    let url = `https://yts.torrentbay.to/api/v2/movie_details.json?imdb_id=${imdb_id}`;\n    let data = useFetch(url);\n\n    return (\n        <div style={styles.container}>\n        {\n            data !== undefined ?\n                Object.values(data).length > 0 ?\n                    <>\n                        <div style={styles.body}>\n                            <div style={styles.leftContainer}>\n                                <img    \n                                    src={`${data.data.movie.large_cover_image}`}\n                                    style={{objectFit: 'cover'}}\n                                />\n                            </div>\n\n                            <div style={styles.rightContainer}>\n                                <div style={styles.inner}>\n                                    <div style={styles.leftContainer}>\n                                        <h1>{data.data.movie.title}</h1>\n                                        <p>Rating: {data.data.movie.rating} </p>\n                                        <p>Year: {data.data.movie.year} </p>\n                                        <p>Genre: \n                                            {\n                                                data.data.movie.genres.map((genre,key)=>{\n                                                    return (\n                                                        <span key={key}> {genre}\n                                                            {\n                                                                (data.data.movie.genres.length > 0 && data.data.movie.genres.length - 1 !== key) &&\n                                                                    <span>,</span>\n                                                            }\n                                                        </span>\n                                                    )\n                                                })\n                                            }\n                                        </p>\n                                    </div>\n\n                                    <div style={styles.rightContainer}>\n                                        <img    \n                                            src={`${data.data.movie.medium_cover_image}`}\n                                            style={{objectFit: 'cover'}}\n                                            width={100}\n                                            height={150}\n                                        />\n                                    </div>\n                                </div>\n                                <p>{data.data.movie.description_full}</p>\n                            </div>\n                        </div>\n                    </>\n                :\n                    <p>Loading ...</p>\n            :\n                <p>Loading ...</p>\n        }\n        </div>\n    )\n}\n\nconst styles={\n    container:{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    inner: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n    },\n    leftContainer: {\n        display: 'flex',\n        flex: 1,\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    rightContainer: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        padding: 10,\n    }\n}\n\nexport default MovieDetail;  ",[],"/home/jayan/React/colors/src/Lib/cards.js",[],[],"/home/jayan/React/colors/src/Lib/sort.js",[],[],"/home/jayan/React/colors/src/Components/Task.jsx",[],[],"/home/jayan/React/colors/src/Components/Todo.jsx",[],[],"/home/jayan/React/colors/src/Common/Wrapper/index.js",[],[],"/home/jayan/React/colors/src/Hooks/useFetch.js",["164"],[],"/home/jayan/React/colors/src/Common/Nav/index.jsx",["165"],[],"/home/jayan/React/colors/src/Common/Card/movieCard.jsx",["166"],[],"/home/jayan/React/colors/src/Lib/menu.js",[],[],"/home/jayan/React/colors/src/Common/BreadCrumb/index.js",[],[],"/home/jayan/React/colors/src/Common/Footer/index.jsx",[],[],"/home/jayan/React/colors/src/Common/Card/index.jsx",[],[],"/home/jayan/React/colors/src/Lib/genres.js",[],[],"/home/jayan/React/colors/src/Common/Pill/index.jsx",[],[],{"ruleId":"167","severity":1,"message":"168","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"171","line":1,"column":19,"nodeType":"169","messageId":"170","endLine":1,"endColumn":30},{"ruleId":"167","severity":1,"message":"172","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":25,"column":7,"nodeType":"175","endLine":25,"endColumn":14,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":11},{"ruleId":"173","severity":1,"message":"178","line":20,"column":5,"nodeType":"175","endLine":20,"endColumn":7,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":12},{"ruleId":"167","severity":1,"message":"181","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":14},{"ruleId":"167","severity":1,"message":"182","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":21},{"ruleId":"167","severity":1,"message":"183","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":12},{"ruleId":"173","severity":1,"message":"184","line":23,"column":7,"nodeType":"175","endLine":23,"endColumn":9,"suggestions":"185"},{"ruleId":"167","severity":1,"message":"180","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":12},{"ruleId":"167","severity":1,"message":"186","line":11,"column":12,"nodeType":"169","messageId":"170","endLine":11,"endColumn":18},{"ruleId":"167","severity":1,"message":"187","line":12,"column":27,"nodeType":"169","messageId":"170","endLine":12,"endColumn":43},{"ruleId":"167","severity":1,"message":"172","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":15},{"ruleId":"173","severity":1,"message":"188","line":22,"column":7,"nodeType":"175","endLine":22,"endColumn":9,"suggestions":"189"},{"ruleId":"167","severity":1,"message":"190","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":20,"column":33,"nodeType":"193","endLine":23,"endColumn":35},{"ruleId":"191","severity":1,"message":"192","line":49,"column":41,"nodeType":"193","endLine":54,"endColumn":43},{"ruleId":"173","severity":1,"message":"194","line":9,"column":7,"nodeType":"175","endLine":9,"endColumn":12,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":20,"column":39,"nodeType":"198","messageId":"199","endLine":20,"endColumn":41},{"ruleId":"191","severity":1,"message":"192","line":27,"column":13,"nodeType":"193","endLine":31,"endColumn":15},"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'Wrapper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'todos'. Either exclude it or remove the dependency array.","ArrayExpression",["200"],"'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["201"],"'Card' is defined but never used.","'Button' is defined but never used.","'FloatingLabel' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'params.productName' and 'products'. Either include them or remove the dependency array.",["202"],"'colors' is assigned a value but never used.","'setSelectedColor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["203"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["204"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: []",{"range":"215","text":"216"},"Update the dependencies array to be: [products]",{"range":"217","text":"218"},"Update the dependencies array to be: [params.productName, products]",{"range":"219","text":"220"},"Update the dependencies array to be: [url]",{"range":"221","text":"222"},"Update the dependencies array to be: [getData, url]",{"range":"223","text":"224"},[680,687],"[]",[693,695],"[products]",[790,792],"[params.productName, products]",[730,732],"[url]",[199,204],"[getData, url]"]