{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"list_request\":\n      return {\n        ...state\n      };\n    case \"add_request\":\n      let fruitList = [{\n        ...state.fruits,\n        ...state.fruitList\n      }];\n      state.fruits = {\n        name: \"\",\n        image: \"\"\n      };\n      state.toast = true;\n      state.message = 'Added Successfully !';\n      return {\n        ...state,\n        fruitList\n      };\n    case \"edit_request\":\n      state.error = {};\n      let temp = [];\n      state.fruitList.map((tmp, key) => {\n        if (key === state.editedKey) {\n          temp.push(state.fruitEdit[0]);\n        } else {\n          temp.push(tmp);\n        }\n      });\n      state.fruitEdit = [];\n      state.editedKey = '';\n      state.toast = true;\n      state.message = 'Updated successfully !';\n      return {\n        ...state\n      };\n    case \"delete_request\":\n      return {\n        ...state\n      };\n    case \"add_remove_from_cart\":\n      return {\n        ...state\n      };\n    case \"handle_change\":\n      const name = action.value.target.name;\n      const value = action.value.target.value;\n      if (Object.values(state.fruitEdit).length > 0) {\n        let temp = {\n          [name]: value\n        };\n        let fruitEdit = [{\n          ...state.fruitEdit[0],\n          ...temp\n        }];\n        return {\n          ...state,\n          fruitEdit\n        };\n      } else {\n        let temp = {\n          [name]: value\n        };\n        let fruits = {\n          \"fruits\": {\n            ...state.fruits,\n            ...temp\n          }\n        };\n        return {\n          ...state,\n          ...fruits\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","type","fruitList","fruits","name","image","toast","message","error","temp","map","tmp","key","editedKey","push","fruitEdit","value","target","Object","values","length"],"sources":["/home/jayan/React/colors/src/Components/Fruits/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\n    switch(action.type){\n        case \"list_request\": \n            return {\n                ...state, \n                \n            };\n        case \"add_request\":\n            let fruitList = [{...state.fruits, ...state.fruitList}];\n            state.fruits = {\n                name: \"\",\n                image: \"\",\n            };\n            state.toast = true;\n            state.message = 'Added Successfully !';\n            return {\n                ...state, \n                fruitList\n            };\n        case \"edit_request\":\n            state.error = {};\n            let temp = [];\n\n            state.fruitList.map((tmp,key)=>{\n                if(key === state.editedKey){\n                    temp.push(state.fruitEdit[0]);\n                }\n                else{\n                    temp.push(tmp);\n                }\n            })\n\n            state.fruitEdit = [];\n            state.editedKey = '';\n            state.toast = true;\n            state.message = 'Updated successfully !';\n            return {\n                ...state\n            }\n        case \"delete_request\":\n            return { \n                ...state, \n            }\n        case \"add_remove_from_cart\":\n            return { \n                ...state, \n            }\n        case \"handle_change\":\n            const name = action.value.target.name;\n            const value = action.value.target.value;\n\n            if(Object.values(state.fruitEdit).length > 0){\n                let temp = {[name]: value};\n                let fruitEdit = [{...state.fruitEdit[0], ...temp}];\n                return {\n                    ...state,\n                    fruitEdit\n                }\n            }\n            else{\n                let temp = {[name]: value};\n                let fruits = {\"fruits\" : {...state.fruits, ...temp}};\n                return {\n                    ...state,\n                    ...fruits\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"],"mappings":"AAAA,MAAMA,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,OAAO;QACH,GAAGF;MAEP,CAAC;IACL,KAAK,aAAa;MACd,IAAIG,SAAS,GAAG,CAAC;QAAC,GAAGH,KAAK,CAACI,MAAM;QAAE,GAAGJ,KAAK,CAACG;MAAS,CAAC,CAAC;MACvDH,KAAK,CAACI,MAAM,GAAG;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACX,CAAC;MACDN,KAAK,CAACO,KAAK,GAAG,IAAI;MAClBP,KAAK,CAACQ,OAAO,GAAG,sBAAsB;MACtC,OAAO;QACH,GAAGR,KAAK;QACRG;MACJ,CAAC;IACL,KAAK,cAAc;MACfH,KAAK,CAACS,KAAK,GAAG,CAAC,CAAC;MAChB,IAAIC,IAAI,GAAG,EAAE;MAEbV,KAAK,CAACG,SAAS,CAACQ,GAAG,CAAC,CAACC,GAAG,EAACC,GAAG,KAAG;QAC3B,IAAGA,GAAG,KAAKb,KAAK,CAACc,SAAS,EAAC;UACvBJ,IAAI,CAACK,IAAI,CAACf,KAAK,CAACgB,SAAS,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,MACG;UACAN,IAAI,CAACK,IAAI,CAACH,GAAG,CAAC;QAClB;MACJ,CAAC,CAAC;MAEFZ,KAAK,CAACgB,SAAS,GAAG,EAAE;MACpBhB,KAAK,CAACc,SAAS,GAAG,EAAE;MACpBd,KAAK,CAACO,KAAK,GAAG,IAAI;MAClBP,KAAK,CAACQ,OAAO,GAAG,wBAAwB;MACxC,OAAO;QACH,GAAGR;MACP,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGA;MACP,CAAC;IACL,KAAK,sBAAsB;MACvB,OAAO;QACH,GAAGA;MACP,CAAC;IACL,KAAK,eAAe;MAChB,MAAMK,IAAI,GAAGJ,MAAM,CAACgB,KAAK,CAACC,MAAM,CAACb,IAAI;MACrC,MAAMY,KAAK,GAAGhB,MAAM,CAACgB,KAAK,CAACC,MAAM,CAACD,KAAK;MAEvC,IAAGE,MAAM,CAACC,MAAM,CAACpB,KAAK,CAACgB,SAAS,CAAC,CAACK,MAAM,GAAG,CAAC,EAAC;QACzC,IAAIX,IAAI,GAAG;UAAC,CAACL,IAAI,GAAGY;QAAK,CAAC;QAC1B,IAAID,SAAS,GAAG,CAAC;UAAC,GAAGhB,KAAK,CAACgB,SAAS,CAAC,CAAC,CAAC;UAAE,GAAGN;QAAI,CAAC,CAAC;QAClD,OAAO;UACH,GAAGV,KAAK;UACRgB;QACJ,CAAC;MACL,CAAC,MACG;QACA,IAAIN,IAAI,GAAG;UAAC,CAACL,IAAI,GAAGY;QAAK,CAAC;QAC1B,IAAIb,MAAM,GAAG;UAAC,QAAQ,EAAG;YAAC,GAAGJ,KAAK,CAACI,MAAM;YAAE,GAAGM;UAAI;QAAC,CAAC;QACpD,OAAO;UACH,GAAGV,KAAK;UACR,GAAGI;QACP,CAAC;MACL;IACJ;MACI,OAAOJ,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}