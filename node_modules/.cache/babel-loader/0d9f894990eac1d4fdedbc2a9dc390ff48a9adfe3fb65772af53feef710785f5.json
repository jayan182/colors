{"ast":null,"code":"var _jsxFileName = \"/home/jayan/React/colors/src/Components/Weather/index.jsx\",\n  _s = $RefreshSig$();\nimport { faRoad } from '@fortawesome/free-solid-svg-icons';\nimport Wrapper from '../../Common/Wrapper/index';\nimport Search from './search';\nimport { useState, useEffect } from 'react';\nimport { getForecast } from './service';\nimport config from '../../Config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [city, setCity] = useState('Kathmandu');\n  useEffect(() => {\n    async function data() {\n      const params = {\n        key: config.WEATHER.TOKEN,\n        q: city,\n        days: 1,\n        aqi: false,\n        alerts: 'no'\n      };\n      console.log(\"params\", params);\n      //let data = await getForecast();\n    }\n\n    data();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 8\n  }, this);\n}\n_s(Index, \"gmFrEXb6SBccwglRvs6MalRfEls=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["faRoad","Wrapper","Search","useState","useEffect","getForecast","config","jsxDEV","_jsxDEV","Index","_s","loading","setLoading","city","setCity","data","params","key","WEATHER","TOKEN","q","days","aqi","alerts","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jayan/React/colors/src/Components/Weather/index.jsx"],"sourcesContent":["import { faRoad } from '@fortawesome/free-solid-svg-icons';\nimport Wrapper from '../../Common/Wrapper/index';\nimport Search from './search';\nimport {useState, useEffect} from 'react';\nimport {getForecast} from './service';\nimport config from '../../Config/config';\n\nfunction Index(){\n    const [loading, setLoading] = useState(false);\n    const [city, setCity] = useState('Kathmandu');\n\n    useEffect(()=>{\n        async function data(){\n            const params = {\n                key: config.WEATHER.TOKEN,\n                q: city,\n                days: 1,\n                aqi: false,\n                alerts: 'no',\n            };\n            console.log(\"params\",params)\n            //let data = await getForecast();\n        }\n        data();\n    },[]);\n\n    return (\n       <Wrapper>\n           <div>\n                <Search />\n\n                {/* <General />\n\n                <Hour />\n\n                <ForeCastText /> */}\n            </div>\n       </Wrapper>\n    )\n}\n\nexport default Index;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,mCAAmC;AAC1D,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,WAAW,QAAO,WAAW;AACrC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,WAAW,CAAC;EAE7CC,SAAS,CAAC,MAAI;IACV,eAAeW,IAAIA,CAAA,EAAE;MACjB,MAAMC,MAAM,GAAG;QACXC,GAAG,EAAEX,MAAM,CAACY,OAAO,CAACC,KAAK;QACzBC,CAAC,EAAEP,IAAI;QACPQ,IAAI,EAAE,CAAC;QACPC,GAAG,EAAE,KAAK;QACVC,MAAM,EAAE;MACZ,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACT,MAAM,CAAC;MAC5B;IACJ;;IACAD,IAAI,EAAE;EACV,CAAC,EAAC,EAAE,CAAC;EAEL,oBACGP,OAAA,CAACP,OAAO;IAAAyB,QAAA,eACJlB,OAAA;MAAAkB,QAAA,eACKlB,OAAA,CAACN,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAOR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEjB;AAACpB,EAAA,CAhCQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAkCd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}