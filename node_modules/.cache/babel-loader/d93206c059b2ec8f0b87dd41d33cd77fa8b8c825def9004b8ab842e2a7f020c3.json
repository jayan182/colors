{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"list_request\":\n      return {\n        ...state\n      };\n    case \"add_request\":\n      if (Object.values(state.fruitEdit).length === 0) {\n        let fruitList = state.fruitList.push(state.fruits);\n        console.log(\"fruits\", state.fruits);\n        console.log(\"fruitList\", state.fruitList);\n        console.log(\"fruitList\", state.fruitList.length);\n        state.fruits = {\n          name: \"\",\n          image: \"\"\n        };\n        state.toast = true;\n        state.message = 'Added Successfully !';\n        state.fruitEdit = [];\n        return {\n          ...state,\n          ...fruitList\n        };\n      } else {\n        state.error = {};\n        let temp = [];\n        state.fruitList.map((tmp, key) => {\n          if (key === state.editedKey) {\n            temp.push(state.fruitEdit[0]);\n          } else {\n            temp.push(tmp);\n          }\n        });\n        state.fruitEdit = [];\n        state.editedKey = '';\n        state.toast = true;\n        state.message = 'Updated Successfully !';\n        return {\n          ...state,\n          ...{\n            \"fruitList\": temp\n          }\n        };\n      }\n    case \"edit_request\":\n      let fruitEdit = state.fruitList.filter(tmp => {\n        return tmp.name === action.value;\n      });\n      state.editedKey = action.key;\n      return {\n        ...state,\n        fruitEdit\n      };\n    case \"delete_request\":\n      {\n        let index = state.fruitList.findIndex(tmp => {\n          return tmp.name === action.value;\n        });\n        if (index !== -1) {\n          let temp_fruits = [...state.fruitList];\n          temp_fruits.splice(index, 1);\n          state.toast = true;\n          state.message = 'Deleted Successfully !';\n          let fruitList = {\n            \"fruitList\": temp_fruits\n          };\n          return {\n            ...state,\n            ...fruitList\n          };\n        } else {\n          return {\n            ...state\n          };\n        }\n      }\n    case \"add_remove_from_cart\":\n      {\n        let index = state.cartList.findIndex(tmp => {\n          return tmp.name === action.value.name;\n        });\n        if (index === -1) {\n          let cartList = [action.value];\n          return {\n            ...state,\n            cartList\n          };\n        } else {\n          let temp_fruits = [...state.cartList];\n          temp_fruits.splice(index, 1);\n          let cartList = {\n            \"cartList\": temp_fruits\n          };\n          return {\n            ...state,\n            ...cartList\n          };\n        }\n      }\n    case \"handle_change\":\n      const name = action.value.target.name;\n      const value = action.value.target.value;\n      if (Object.values(state.fruitEdit).length > 0) {\n        let temp = {\n          [name]: value\n        };\n        let fruitEdit = [{\n          ...state.fruitEdit[0],\n          ...temp\n        }];\n        return {\n          ...state,\n          fruitEdit\n        };\n      } else {\n        let temp = {\n          [name]: value\n        };\n        let fruits = {\n          \"fruits\": {\n            ...state.fruits,\n            ...temp\n          }\n        };\n        return {\n          ...state,\n          ...fruits\n        };\n      }\n    case \"SET_UNSET_TOAST\":\n      return {\n        ...state,\n        toast: !state.toast\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["reducer","state","action","type","Object","values","fruitEdit","length","fruitList","push","fruits","console","log","name","image","toast","message","error","temp","map","tmp","key","editedKey","filter","value","index","findIndex","temp_fruits","splice","cartList","target"],"sources":["/home/jayan/React/colors/src/Components/Fruits/reducer.js"],"sourcesContent":["const reducer = (state, action) => {\n    switch(action.type){\n        case \"list_request\": \n            return {\n                ...state, \n                \n            };\n        case \"add_request\":\n            if(Object.values(state.fruitEdit).length === 0){\n                let fruitList = state.fruitList.push(state.fruits);\n                console.log(\"fruits\",state.fruits);\n                console.log(\"fruitList\",state.fruitList);\n                console.log(\"fruitList\",state.fruitList.length);\n                state.fruits = {\n                    name: \"\",\n                    image: \"\",\n                };\n                state.toast = true;\n                state.message = 'Added Successfully !';\n                state.fruitEdit = [];\n                return {\n                    ...state, \n                    ...fruitList\n                };\n            }\n            else{\n                state.error = {};\n                let temp = [];\n\n                state.fruitList.map((tmp,key)=>{\n                    if(key === state.editedKey){\n                        temp.push(state.fruitEdit[0]);\n                    }\n                    else{\n                        temp.push(tmp);\n                    }\n                })\n\n                state.fruitEdit = [];\n                state.editedKey = '';\n                state.toast = true;\n                state.message = 'Updated Successfully !';\n                return {\n                    ...state,\n                    ...{\"fruitList\" : temp}\n                }\n            }\n        case \"edit_request\":\n            let fruitEdit = state.fruitList.filter((tmp)=>{return tmp.name === action.value});\n            state.editedKey = action.key;\n            return { \n                ...state, \n                fruitEdit,\n                \n            }\n        case \"delete_request\":\n            {\n                let index = state.fruitList.findIndex((tmp)=>{return tmp.name === action.value});\n\n                if(index !== -1){\n                    let temp_fruits = [...state.fruitList];\n                    temp_fruits.splice(index, 1);\n                    state.toast = true;\n                    state.message = 'Deleted Successfully !';\n                    let fruitList = {\"fruitList\": temp_fruits};\n                    return {\n                        ...state,\n                        ...fruitList\n                    }\n                }\n                else{\n                    return {\n                        ...state\n                    }\n                }\n            }\n        case \"add_remove_from_cart\":\n            {\n                let index = state.cartList.findIndex((tmp)=>{\n                    return tmp.name === action.value.name\n                });\n        \n                if(index === -1){\n                    let cartList = [action.value];\n                    return {\n                        ...state,\n                        cartList\n                    }\n                }\n                else{\n                    let temp_fruits = [...state.cartList];\n                    temp_fruits.splice(index, 1);\n                    let cartList = {\"cartList\": temp_fruits};\n                    return {\n                        ...state,\n                        ...cartList\n                    }\n                }\n            }\n        case \"handle_change\":\n            const name = action.value.target.name;\n            const value = action.value.target.value;\n\n            if(Object.values(state.fruitEdit).length > 0){\n                let temp = {[name]: value};\n                let fruitEdit = [{...state.fruitEdit[0], ...temp}];\n                return {\n                    ...state,\n                    fruitEdit\n                }\n            }\n            else{\n                let temp = {[name]: value};\n                let fruits = {\"fruits\" : {...state.fruits, ...temp}};\n                return {\n                    ...state,\n                    ...fruits\n                }\n            }\n        case \"SET_UNSET_TOAST\":\n            return {\n                ...state,\n                toast: !state.toast,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}