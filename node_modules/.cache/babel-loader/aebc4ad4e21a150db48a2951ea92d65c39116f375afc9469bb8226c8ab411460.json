{"ast":null,"code":"var _jsxFileName = \"/Users/jayan/React/colors/src/Components/Memo.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Memo() {\n  _s();\n  const [task, setTask] = useState(['Task 1', 'Task 2']);\n  const [counter, setCounter] = useState(0);\n  const increment = () => {\n    setCounter(i => i + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Task, {\n      tasks: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: counter\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        increment();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Memo, \"kGdDasffLL5Ob4n8vLFf5aGvXMg=\");\n_c = Memo;\nexport default Memo;\nvar _c;\n$RefreshReg$(_c, \"Memo\");","map":{"version":3,"names":["useState","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","Memo","_s","task","setTask","counter","setCounter","increment","i","children","fileName","_jsxFileName","lineNumber","columnNumber","tasks","onClick","_c","$RefreshReg$"],"sources":["/Users/jayan/React/colors/src/Components/Memo.jsx"],"sourcesContent":["import {useState} from 'react';\nimport Task from './Task';\n\nfunction Memo(){\n    const [task, setTask] = useState(['Task 1', 'Task 2']);\n    const [counter, setCounter] = useState(0);\n\n    const increment = () =>{\n        setCounter(i => (i+1));\n    }\n\n    return (\n        <>\n            <h2>Task</h2>\n            <Task tasks={task} />\n            <br />\n            <>{counter}</>\n            <br />\n            <button onClick={()=>{increment()}}>+</button>\n        </>\n    )\n}\n\nexport default Memo;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMY,SAAS,GAAGA,CAAA,KAAK;IACnBD,UAAU,CAACE,CAAC,IAAKA,CAAC,GAAC,CAAE,CAAC;EAC1B,CAAC;EAED,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACbf,OAAA,CAACF,IAAI;MAACkB,KAAK,EAAEX;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrBf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNf,OAAA,CAAAE,SAAA;MAAAS,QAAA,EAAGJ;IAAO,iBAAI,eACdP,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNf,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAI;QAACR,SAAS,EAAE;MAAA,CAAE;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC/C;AAEX;AAACX,EAAA,CAlBQD,IAAI;AAAAe,EAAA,GAAJf,IAAI;AAoBb,eAAeA,IAAI;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}