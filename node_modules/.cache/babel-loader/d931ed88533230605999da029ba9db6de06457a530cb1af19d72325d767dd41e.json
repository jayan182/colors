{"ast":null,"code":"var _jsxFileName = \"/home/jayan/React/colors/src/Components/Weather/index.jsx\",\n  _s = $RefreshSig$();\nimport { faRoad } from '@fortawesome/free-solid-svg-icons';\nimport Wrapper from '../../Common/Wrapper/index';\nimport Search from './search';\nimport { useState, useEffect } from 'react';\nimport { getForecast } from './service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [city, setCity] = useState('Kathmandu');\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    async function data() {\n      const params = {\n        key: \"318712e780144abcac530843233001\",\n        q: city,\n        days: 1,\n        aqi: false,\n        alerts: 'no'\n      };\n      let data = await getForecast(params);\n      if (data) {\n        setTimeout(() => {\n          setLoading(false);\n          setWeatherData(data);\n        }, [10000]);\n      }\n    }\n    data();\n  }, []);\n  console.log(\"weatherData\", weatherData);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Weahter data \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 8\n  }, this);\n}\n_s(Index, \"DeCn831InDFC5Lfc/5r6BOJ2Sns=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["faRoad","Wrapper","Search","useState","useEffect","getForecast","jsxDEV","_jsxDEV","Index","_s","loading","setLoading","city","setCity","weatherData","setWeatherData","data","params","key","q","days","aqi","alerts","setTimeout","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jayan/React/colors/src/Components/Weather/index.jsx"],"sourcesContent":["import { faRoad } from '@fortawesome/free-solid-svg-icons';\nimport Wrapper from '../../Common/Wrapper/index';\nimport Search from './search';\nimport {useState, useEffect} from 'react';\nimport {getForecast} from './service';\n\nfunction Index(){\n    const [loading, setLoading] = useState(false);\n    const [city, setCity] = useState('Kathmandu');\n    const [weatherData, setWeatherData] = useState([]);\n\n    useEffect(()=>{\n        setLoading(true);\n        async function data(){\n            const params = {\n                key: \"318712e780144abcac530843233001\",\n                q: city,\n                days: 1,\n                aqi: false,\n                alerts: 'no',\n            };\n            let data = await getForecast(params);\n           \n            if(data){\n                setTimeout(()=>{\n                    setLoading(false);\n                    setWeatherData(data);\n                },[10000]);\n            }\n        }\n        data();\n    },[]);\n\n    console.log(\"weatherData\",weatherData);\n    return (\n       <Wrapper>\n           <div>\n               {\n                   loading ?\n                    <span>loading ...</span>\n                    :\n                        <span>Weahter data </span>\n               }\n                <Search />\n\n                {/* <General />\n\n                <Hour />\n\n                <ForeCastText /> */}\n            </div>\n       </Wrapper>\n    )\n}\n\nexport default Index;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,mCAAmC;AAC1D,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,WAAW,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC;EAC7C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAI;IACVO,UAAU,CAAC,IAAI,CAAC;IAChB,eAAeK,IAAIA,CAAA,EAAE;MACjB,MAAMC,MAAM,GAAG;QACXC,GAAG,EAAE,gCAAgC;QACrCC,CAAC,EAAEP,IAAI;QACPQ,IAAI,EAAE,CAAC;QACPC,GAAG,EAAE,KAAK;QACVC,MAAM,EAAE;MACZ,CAAC;MACD,IAAIN,IAAI,GAAG,MAAMX,WAAW,CAACY,MAAM,CAAC;MAEpC,IAAGD,IAAI,EAAC;QACJO,UAAU,CAAC,MAAI;UACXZ,UAAU,CAAC,KAAK,CAAC;UACjBI,cAAc,CAACC,IAAI,CAAC;QACxB,CAAC,EAAC,CAAC,KAAK,CAAC,CAAC;MACd;IACJ;IACAA,IAAI,EAAE;EACV,CAAC,EAAC,EAAE,CAAC;EAELQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAACX,WAAW,CAAC;EACtC,oBACGP,OAAA,CAACN,OAAO;IAAAyB,QAAA,eACJnB,OAAA;MAAAmB,QAAA,GAEQhB,OAAO,gBACNH,OAAA;QAAAmB,QAAA,EAAM;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,gBAEpBvB,OAAA;QAAAmB,QAAA,EAAM;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAElCvB,OAAA,CAACL,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAOR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEjB;AAACrB,EAAA,CA/CQD,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}