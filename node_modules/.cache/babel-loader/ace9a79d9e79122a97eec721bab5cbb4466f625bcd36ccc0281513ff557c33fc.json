{"ast":null,"code":"var _jsxFileName = \"/home/jayan/React/colors/src/Components/Movie/detail.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useFetch } from '../../Hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieDetail() {\n  _s();\n  const params = useParams();\n  let imdb_id = params.movieId;\n  let url = `https://yts.torrentbay.to/api/v2/movie_details.json?imdb_id=${imdb_id}`;\n  let data = useFetch(url);\n  console.log(\"data\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: data !== undefined ? Object.values(data).length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.body,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.leftContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${data.data.movie.large_cover_image}`,\n            style: {\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.rightContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inner,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.leftContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: data.data.movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Rating: \", data.data.movie.rating, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Year: \", data.data.movie.year, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Genre:\", data.data.movie.genres.map((genre, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", genre, data.data.movie.genres.length > 0 && data.data.movie.genres.length - 1 !== key && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \",\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 69\n                    }, this)]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 57\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.rightContainer,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${data.data.movie.small_cover_image}`,\n                style: {\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.data.movie.description_full\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetail, \"0J0QqNN3jBAyFTI8BmmcLQqnWuo=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = MovieDetail;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  body: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  inner: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  leftContainer: {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  rightContainer: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 10\n  }\n};\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["useParams","useState","useFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetail","_s","params","imdb_id","movieId","url","data","console","log","style","styles","container","children","undefined","Object","values","length","body","leftContainer","src","movie","large_cover_image","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","rightContainer","inner","title","rating","year","genres","map","genre","key","small_cover_image","description_full","_c","display","flexDirection","alignItems","justifyContent","flexWrap","flex","padding","$RefreshReg$"],"sources":["/home/jayan/React/colors/src/Components/Movie/detail.jsx"],"sourcesContent":["import {useParams} from 'react-router-dom';\nimport {useState} from 'react';\nimport {useFetch} from '../../Hooks/useFetch';\n\nfunction MovieDetail(){\n    const params = useParams();\n    let imdb_id = params.movieId;\n    let url = `https://yts.torrentbay.to/api/v2/movie_details.json?imdb_id=${imdb_id}`;\n    let data = useFetch(url);\n\n    console.log(\"data\",data);\n    return (\n        <div style={styles.container}>\n        {\n            data !== undefined ?\n                Object.values(data).length > 0 ?\n                    <>\n                        <div style={styles.body}>\n                            <div style={styles.leftContainer}>\n                                <img    \n                                    src={`${data.data.movie.large_cover_image}`}\n                                    style={{objectFit: 'cover'}}\n                                />\n                            </div>\n\n                            <div style={styles.rightContainer}>\n                                <div style={styles.inner}>\n                                    <div style={styles.leftContainer}>\n                                        <h1>{data.data.movie.title}</h1>\n                                        <p>Rating: {data.data.movie.rating} </p>\n                                        <p>Year: {data.data.movie.year} </p>\n                                        <p>Genre: \n                                            {\n                                                data.data.movie.genres.map((genre,key)=>{\n                                                    return (\n                                                        <span key={key}> {genre}\n                                                            {\n                                                                (data.data.movie.genres.length > 0 && data.data.movie.genres.length - 1 !== key) &&\n                                                                    <span>,</span>\n                                                            }\n                                                        </span>\n                                                    )\n                                                })\n                                            }\n                                        </p>\n                                    </div>\n\n                                    <div style={styles.rightContainer}>\n                                        <img    \n                                            src={`${data.data.movie.small_cover_image}`}\n                                            style={{objectFit: 'cover'}}\n                                        />\n                                    </div>\n                                </div>\n                                <p>{data.data.movie.description_full}</p>\n                            </div>\n                        </div>\n                    </>\n                :\n                    <p>Loading ...</p>\n            :\n                <p>Loading ...</p>\n        }\n        </div>\n    )\n}\n\nconst styles={\n    container:{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    inner: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    leftContainer: {\n        display: 'flex',\n        flex: 1,\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    rightContainer: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        padding: 10,\n    }\n}\n\nexport default MovieDetail;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}