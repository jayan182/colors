{"ast":null,"code":"var _jsxFileName = \"/home/jayan/React/colors/src/Components/Reducer/index.jsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\n//import {initialState, reducer} from './reducer';\nimport Wrapper from '../../Common/Wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  counter: 0\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        counter: state + 1\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        counter: state + 1\n      };\n    case \"RESET\":\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\nfunction Index() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const decrement = () => {\n    dispatch({\n      type: 'DECREMENT'\n    });\n  };\n  const increment = () => {\n    dispatch({\n      type: 'INCREMENT'\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        decrement();\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: state.counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        increment();\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        reset();\n      },\n      children: \"RESET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 8\n  }, this);\n}\n_s(Index, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["useReducer","Wrapper","jsxDEV","_jsxDEV","initialState","counter","reducer","state","action","type","Index","_s","dispatch","decrement","increment","reset","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jayan/React/colors/src/Components/Reducer/index.jsx"],"sourcesContent":["import { useReducer } from 'react';\n//import {initialState, reducer} from './reducer';\nimport Wrapper from '../../Common/Wrapper';\n\nconst initialState = {\n    counter: 0\n};\n\nconst reducer = (state, action) =>{\n    switch(action.type){\n        case \"INCREMENT\":\n           return {\n               ...state, counter: state + 1\n           }\n        case \"DECREMENT\":\n            return {\n                ...state, counter: state + 1\n            }\n        case \"RESET\":\n            return {\n                ...state\n            }\n        default:\n           return state;\n    }\n}\n\nfunction Index() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const decrement = () => {\n        dispatch({type: 'DECREMENT'})\n    }\n\n    const increment = () => {\n        dispatch({type: 'INCREMENT'})\n    }\n\n    const reset = () => {\n        dispatch({type: 'RESET'})\n    }\n\n    return (\n       <Wrapper>\n        <button onClick={()=>{decrement()}}>-</button>\n        <h2>{state.counter}</h2>\n        <button onClick={()=>{increment()}}>+</button>\n        <button onClick={()=>{reset()}}>RESET</button>\n       </Wrapper>\n    )\n}\n\nexport default Index;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC;AACA,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAI;EAC9B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACb,OAAO;QACH,GAAGF,KAAK;QAAEF,OAAO,EAAEE,KAAK,GAAG;MAC/B,CAAC;IACJ,KAAK,WAAW;MACZ,OAAO;QACH,GAAGA,KAAK;QAAEF,OAAO,EAAEE,KAAK,GAAG;MAC/B,CAAC;IACL,KAAK,OAAO;MACR,OAAO;QACH,GAAGA;MACP,CAAC;IACL;MACG,OAAOA,KAAK;EAAC;AAExB,CAAC;AAED,SAASG,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGZ,UAAU,CAACM,OAAO,EAAEF,YAAY,CAAC;EAE3D,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACpBD,QAAQ,CAAC;MAACH,IAAI,EAAE;IAAW,CAAC,CAAC;EACjC,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACpBF,QAAQ,CAAC;MAACH,IAAI,EAAE;IAAW,CAAC,CAAC;EACjC,CAAC;EAED,MAAMM,KAAK,GAAGA,CAAA,KAAM;IAChBH,QAAQ,CAAC;MAACH,IAAI,EAAE;IAAO,CAAC,CAAC;EAC7B,CAAC;EAED,oBACGN,OAAA,CAACF,OAAO;IAAAe,QAAA,gBACPb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAI;QAACJ,SAAS,EAAE;MAAA,CAAE;MAAAG,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC9ClB,OAAA;MAAAa,QAAA,EAAKT,KAAK,CAACF;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxBlB,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAI;QAACH,SAAS,EAAE;MAAA,CAAE;MAAAE,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC9ClB,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAI;QAACF,KAAK,EAAE;MAAA,CAAE;MAAAC,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrC;AAEjB;AAACV,EAAA,CAvBQD,KAAK;AAAAY,EAAA,GAALZ,KAAK;AAyBd,eAAeA,KAAK;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}