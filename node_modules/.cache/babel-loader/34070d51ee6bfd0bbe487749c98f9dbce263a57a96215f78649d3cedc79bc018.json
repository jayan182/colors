{"ast":null,"code":"import Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction General(props) {\n  let {\n    location,\n    current\n  } = props;\n  // let {name} = location;\n  // let {temp_c, condition: {icon}} = current;\n\n  console.log(\"name\", location);\n  return (\n    /*#__PURE__*/\n    // <Row>\n    //     <Col>\n    //         <span>{name}</span>\n    //         <span>{temp_c}</span>\n    //     </Col>\n    //     {/* <Col>\n    //         <img src={`${icon}`} />\n    //     </Col> */}\n    // </Row>\n    _jsxDEV(_Fragment, {}, void 0, false)\n  );\n}\n_c = General;\nexport default General;\nvar _c;\n$RefreshReg$(_c, \"General\");","map":{"version":3,"names":["Row","Col","Fragment","_Fragment","jsxDEV","_jsxDEV","General","props","location","current","console","log","_c","$RefreshReg$"],"sources":["/home/jayan/React/colors/src/Components/Weather/general.jsx"],"sourcesContent":["import Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction General(props) {\n    let { location, current } = props;\n    // let {name} = location;\n    // let {temp_c, condition: {icon}} = current;\n\n    console.log(\"name\",location);\n    return (    \n        // <Row>\n        //     <Col>\n        //         <span>{name}</span>\n        //         <span>{temp_c}</span>\n        //     </Col>\n            \n        //     {/* <Col>\n        //         <img src={`${icon}`} />\n        //     </Col> */}\n        // </Row>\n        <></>\n    )\n}\n\nexport default General;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,OAAOA,CAACC,KAAK,EAAE;EACpB,IAAI;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EACjC;EACA;;EAEAG,OAAO,CAACC,GAAG,CAAC,MAAM,EAACH,QAAQ,CAAC;EAC5B;IAAA;IACI;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACAH,OAAA,CAAAF,SAAA;EAAK;AAEb;AAACS,EAAA,GAnBQN,OAAO;AAqBhB,eAAeA,OAAO;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}