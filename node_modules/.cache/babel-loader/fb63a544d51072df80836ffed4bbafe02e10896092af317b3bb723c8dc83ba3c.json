{"ast":null,"code":"var _jsxFileName = \"/home/jayan/React/colors/src/Components/Fruits/index.jsx\",\n  _s = $RefreshSig$();\nimport List from './list';\nimport Create from './create';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fruits() {\n  _s();\n  const [fruitList, setFruitList] = useState([]);\n  const [fruits, setFruits] = useState({});\n  const [error, setError] = useState({});\n  const styles = {\n    container: {\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    bodyContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    leftContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    rightContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  };\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    setFruits(prev_fruit => ({\n      ...prev_fruit,\n      [name]: value\n    }));\n  };\n  console.log(\"fruits\", fruits);\n  const registerFruits = () => {\n    if (fruits.length == 0) {\n      setError({\n        \"name\": \"Fruits is Required\"\n      });\n    } else {\n      setFruitList([fruits]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fruits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.bodyContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.leftContainer,\n        children: /*#__PURE__*/_jsxDEV(Create, {\n          name: \"fruit\",\n          registerFruits: registerFruits,\n          handleChange: handleChange,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.rightContainer,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          fruits: fruitList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Fruits, \"eacVxr7c/1rFMHZ8A+42ZJdCh9E=\");\n_c = Fruits;\nexport default Fruits;\nvar _c;\n$RefreshReg$(_c, \"Fruits\");","map":{"version":3,"names":["List","Create","useState","jsxDEV","_jsxDEV","Fruits","_s","fruitList","setFruitList","fruits","setFruits","error","setError","styles","container","height","width","alignItems","justifyContent","bodyContainer","display","flexDirection","leftContainer","flex","rightContainer","handleChange","e","name","target","value","prev_fruit","console","log","registerFruits","length","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jayan/React/colors/src/Components/Fruits/index.jsx"],"sourcesContent":["import List from './list';\nimport Create from './create';\nimport {useState} from 'react';\n\nfunction Fruits(){\n    const [fruitList, setFruitList] = useState([]);\n    const [fruits, setFruits] = useState({});\n    const [error, setError] = useState({});\n\n    const styles = {\n        container: {\n            height: '100%', \n            width: '100%', \n            alignItems: 'center', \n            justifyContent: 'center',\n        },\n        bodyContainer: {\n            display: 'flex', \n            flexDirection: 'row',\n            alignItems: 'center', \n            justifyContent: 'center'\n        },\n        leftContainer: {\n            flex: 1, \n            flexDirection: 'row',\n            alignItems: 'center', \n            justifyContent: 'center'\n        },\n        rightContainer: {\n            flex: 1, \n            flexDirection: 'row',\n            alignItems: 'center', \n            justifyContent: 'center'\n        }\n    }\n\n    const handleChange = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        setFruits(prev_fruit => ({...prev_fruit, [name]: value}));\n    }\n\n    console.log(\"fruits\",fruits);\n\n    const registerFruits = () => {\n        if(fruits.length == 0){\n            setError({\n                \"name\": \"Fruits is Required\"\n            })\n        }\n        else{\n            setFruitList([fruits]);\n        }\n    }\n\n    return (\n        <div style={styles.container}>\n            <h1>Fruits</h1>\n\n            <div style={styles.bodyContainer}>\n                <div style={styles.leftContainer}>\n                    <Create \n                        name=\"fruit\"\n                        registerFruits={registerFruits} \n                        handleChange={handleChange}\n                        error={error}\n                    />\n                </div>\n\n                <div style={styles.rightContainer}>\n                    <List fruits={fruitList}></List>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Fruits;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}